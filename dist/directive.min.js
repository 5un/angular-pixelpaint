/*!
 * angular-directive-boilerplate
 * 
 * Version: 0.0.8 - 2016-06-16T05:54:39.559Z
 * License: MIT
 */
"use strict";angular.module("angularPixelPaint",[]).directive("pixelPaint",["$document","$window","$q","$timeout","$log",function(e,t,i,a,n){function l(l,r){var o,c,g,d,s=e[0].createElement("canvas"),h=s.getContext("2d");r.addClass("pixelpaint");var f=r.find(".layers-container"),u=[],m={cellSize:10,largeGridEvery:10,gridLineWidth:1,gridSubDivisionLineWidth:.5,imageWidth:54,imageHeight:36,showGrid:!0,brushColor:[0,0,0],paintEnabled:!0},v={x:0,y:0},S={x:0,y:0};o=l.$watch("paintOptions",function(e,t){m=Object.assign(m,l.paintOptions),e.cellSize!==t.cellSize&&angular.forEach(u,function(e){e.element[0].width=m.imageWidth*m.cellSize,e.element[0].height=m.imageHeight*m.cellSize,e.element[0].style.transform="translate("+e.offset.x*m.cellSize+"px,"+e.offset.y*m.cellSize+"px)",R(e)}),r.css("width",m.imageWidth*m.cellSize+"px"),r.css("height",m.imageHeight*m.cellSize+"px")},!0),c=l.$watch("layers",function(e,t){x(e,t)},!0),g=l.$watch("shouldGenerateOutputImage",function(e){e&&(n.info("shouldGenerateOutputImage"),P(),a(function(){l.shouldGenerateOutputImage=!1}))}),d=l.$watch("revision",function(e){});var p=new Hammer(r[0]);p.on("tap",function(e){L(e)}),p.on("panstart",function(e){E(e)}),p.on("panmove",function(e){I(e)}),p.on("panend",function(e){G(e)});var x=function(e,t){angular.forEach(e,function(e,i){angular.isDefined(t)&&i<t.length?angular.equals(t[i],e)||z(e,i):z(e)})},z=function(e,t){var i={offset:{x:0,y:0}};t<u.length&&"text"===u[t].type&&(i.offset=u[t].offset);var a=Object.assign({},e,i);a.element=angular.element("<canvas></canvas>"),"text"===a.type&&a.element.addClass("text"),a.element[0].width=m.imageWidth*m.cellSize,a.element[0].height=m.imageHeight*m.cellSize,a.element[0].style.transform="translate("+a.offset.x*m.cellSize+"px,"+a.offset.y*m.cellSize+"px)",a.imageData=h.createImageData(m.imageWidth,m.imageHeight),angular.isDefined(t)?(u[t]=a,f.find("canvas").eq(t).replaceWith(a.element)):(u.push(a),f.append(a.element)),R(a)},y=function(t){var a=i.defer(),n=new Image;return n.onload=function(){var t=e[0].createElement("canvas"),i=t.getContext("2d");i.drawImage(n,0,0);var l=i.getImageData(0,0,n.width,n.height);a.resolve(l)},n.onerror=function(){a.reject()},n.src=t,a.promise},D=function(t){var i=e[0].createElement("canvas");i.width=t.width,i.height=t.height;var a=i.getContext("2d");return a.putImageData(t,0,0),i},w=function(e,t,i,a,n,l,r){var o=4*(i*e.width+t);e.data[o]=a,e.data[o+1]=n,e.data[o+2]=l,e.data[o+3]=r},W=function(){var e=u[0];return angular.forEach(u,function(t){t.active&&(e=t)}),e},b=function(e){angular.forEach(u,function(t,i){i===e?(t.active=!0,t.element.addClass("active")):(t.active=!1,t.element.removeClass("active"))})},C=function(e){var t=W();if(e.pointers.length>0){var i=t.element[0].getBoundingClientRect(),a=e.pointers[0].clientX-i.left,n=e.pointers[0].clientY-i.top,l=Math.floor(a/m.cellSize),r=Math.floor(n/m.cellSize);m.paintEnabled&&(w(t.imageData,l,r,m.brushColor[0],m.brushColor[1],m.brushColor[2],255),O(t,l,r,m.brushColor[0],m.brushColor[1],m.brushColor[2],255))}},L=function(e){var t=W();if(e.target===t.element[0])"text"!==t.type&&C(e);else{var i;angular.forEach(u,function(t,a){t.element[0]===e.target&&(i=a)}),b(i)}},E=function(e){var t=W();"text"===t.type?(v.x=e.pointers[0].clientX,v.y=e.pointers[0].clientY,S.x=t.offset.x,S.y=t.offset.y):C(e)},I=function(e){var t=W();if("text"===t.type){var i=S.x*m.cellSize+(e.pointers[0].clientX-v.x),a=S.y*m.cellSize+(e.pointers[0].clientY-v.y);t.offset.x=Math.floor(i/m.cellSize),t.offset.y=Math.floor(a/m.cellSize),t.element[0].style.transform="translate("+t.offset.x*m.cellSize+"px,"+t.offset.y*m.cellSize+"px)"}else C(e)},G=function(){},R=function(e){"image"===e.type?(e.image&&y(e.image).then(function(t){e.imageData=t,H(e)}),H(e)):"text"===e.type&&$(e)},$=function(e){var i=angular.element("<canvas></canvas>"),a=i[0];a.width=m.imageWidth,a.height=m.imageHeight;var n=a.getContext("2d");if(t.devicePixelRatio){var l=i.attr("width"),r=i.attr("height"),o=l,c=r;i.attr("width",l*t.devicePixelRatio),i.attr("height",r*t.devicePixelRatio),i.css("width",o),i.css("height",c),n.scale(t.devicePixelRatio,t.devicePixelRatio)}var g=e.fontSize||"10px";n.font=g+" "+(e.fontFamily||"Arial");var d=e.text||"text";n.textBaseline="top",n.fillStyle=e.color,n.fillText(d,0,0);var s=n.measureText(d);e.element[0].width=s.width*m.cellSize,e.element[0].height=parseInt(g)*m.cellSize,e.imageData=n.getImageData(0,0,m.imageWidth,m.imageHeight);for(var h,f=0;f<e.imageData.height;f++)for(var u=0;u<e.imageData.width;u++)h=4*(f*e.imageData.width+u),e.imageData.data[h+3]=e.imageData.data[h+3]>50?255:0;H(e)},H=function(e){var t,i,a,n,l,r,o,c,g=e.element[0].getContext("2d");g.clearRect(0,0,e.element[0].width,e.element[0].height);for(var d=0;d<e.imageData.height;d++)for(var s=0;s<e.imageData.width;s++)t=4*(d*e.imageData.width+s),i=e.imageData.data[t],a=e.imageData.data[t+1],n=e.imageData.data[t+2],r=e.imageData.data[t+3],l=r/255,m.showGrid?(o=m.gridSubDivisionLineWidth,c=m.gridSubDivisionLineWidth,s%m.largeGridEvery===0&&(o=m.gridLineWidth),d%m.largeGridEvery===0&&(c=m.gridLineWidth),g.fillStyle="rgba("+i+","+a+", "+n+", "+l+")",g.fillRect(.5+m.cellSize*s+m.gridSubDivisionLineWidth+o,.5+m.cellSize*d+m.gridSubDivisionLineWidth+c,m.cellSize-2*m.gridSubDivisionLineWidth-o,m.cellSize-2*m.gridSubDivisionLineWidth-c)):(g.fillStyle="rgba("+i+","+a+", "+n+", "+l+")",g.fillRect(m.cellSize*s,m.cellSize*d,m.cellSize,m.cellSize))},O=function(e,t,i,a,n,l,r){var o=e.element[0].getContext("2d");if(o.fillStyle="rgba("+a+","+n+", "+l+", "+r+")",m.showGrid){var c=m.gridSubDivisionLineWidth,g=m.gridSubDivisionLineWidth;t%m.largeGridEvery===0&&(c=m.gridLineWidth),i%m.largeGridEvery===0&&(g=m.gridLineWidth),o.fillRect(.5+m.cellSize*t+m.gridSubDivisionLineWidth+c,.5+m.cellSize*i+m.gridSubDivisionLineWidth+g,m.cellSize-2*m.gridSubDivisionLineWidth-c,m.cellSize-2*m.gridSubDivisionLineWidth-g)}else o.fillRect(m.cellSize*t,m.cellSize*i,m.cellSize,m.cellSize)},P=function(){var e=angular.element("<canvas></canvas>"),t=e[0];t.width=m.imageWidth,t.height=m.imageHeight;var i=t.getContext("2d");angular.forEach(u,function(e){i.drawImage(D(e.imageData),e.offset.x,e.offset.y)}),l.outputImage=i.getImageData(0,0,m.imageWidth,m.imageHeight)};l.$on("$destroy",function(){o(),c(),g(),d()}),x(l.layers,[])}var r={restrict:"E",scope:{layers:"=",paintOptions:"=",shouldGenerateOutputImage:"=",outputImage:"=",revision:"="},template:'<div class="layers-container"></div>',link:l};return r}]);